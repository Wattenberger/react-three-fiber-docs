# Examples

A few examples that demonstrate what you can do with React Three Fiber

## Showcase

<iframe src="https://codesandbox.io/embed/2qfxj4?codemirror=1&fontsize=14&hidenavigation=1&view=preview" width="100%" height="500px" />


#### [Building dynamic envmaps](https://codesandbox.io/s/building-dynamic-envmaps-e662p3)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fe662p3%2Fscreenshot.png&w=3840&q=75)
Shows how to form self-contained components with their own state and user interaction.

`ssr` `reflections` `glow` `environment` `bloom` `lut`



#### [Starwars](https://codesandbox.io/s/starwars-fslt99)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Ffslt99%2Fscreenshot.png&w=3840&q=75)


`ssr` `bloom` `hdr`



#### [Interactive spline scene + live HTML](https://codesandbox.io/s/interactive-spline-scene-live-html-f79ucc)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Ff79ucc%2Fscreenshot.png&w=3840&q=75)
Scene exported with Spline

`spline` `stencil` `html` `dom`



#### [Baking soft shadows](https://codesandbox.io/s/baking-soft-shadows-hxcc1x)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fhxcc1x%2Fscreenshot.png&w=3840&q=75)
How to use drei/AccumulativeShadows and RandomizedLight

`baking` `softshadows` `shadows` `lightmap` `progressive`


#### [SSR Test](https://codesandbox.io/s/ssr-test-8pbw1f)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F8pbw1f%2Fscreenshot.png&w=3840&q=75)
Screen space reflections

`ssr` `postprocessing`



#### [CSG operations + Rapier physics](https://codesandbox.io/s/csg-operations-rapier-physics-mw0dtc)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fmw0dtc%2Fscreenshot.png&w=3840&q=75)


`csg` `rapier`



#### [Faucets, select highlight](https://codesandbox.io/s/faucets-select-highlight-8flefh)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F8flefh%2Fscreenshot.png&w=3840&q=75)


`bounds` `highlight` `selection` `metal` `reflections`



#### [Rapier physics](https://codesandbox.io/s/rapier-physics-7e9y1b)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F7e9y1b%2Fscreenshot.png&w=3840&q=75)


`rapier`



#### [Envmap ground projection](https://codesandbox.io/s/envmap-ground-projection-q48jgy)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fq48jgy%2Fscreenshot.png&w=3840&q=75)


`ground projection` `cube camera` `environment` `reflections`



#### [SSR Rover](https://codesandbox.io/s/ssr-rover-leixne)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fleixne%2Fscreenshot.png&w=3840&q=75)
Screen space reflections

`postprocessing` `ssr`



#### [bloom hdr workflow, GLTF](https://codesandbox.io/s/bloom-hdr-workflow-gltf-whnhyr)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fwhnhyr%2Fscreenshot.png&w=3840&q=75)


`bloom` `hdr` `glow` `gltf` `selective`



#### [Ground projected envmaps + lamina](https://codesandbox.io/s/ground-projected-envmaps-lamina-0c5hv9)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F0c5hv9%2Fscreenshot.png&w=3840&q=75)






#### [Basic ballpit](https://codesandbox.io/s/basic-ballpit-0fqow2)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F0fqow2%2Fscreenshot.png&w=3840&q=75)
Physics simulation using cannon.

`physics` `cannon`



#### [Backdrop and cables](https://codesandbox.io/s/backdrop-and-cables-2ij9u)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F2ij9u%2Fscreenshot.png&w=3840&q=75)
Using a studio backdrop, quadratic bezier line and contact shadows.

`quadraticbezierline` `contact-shadows` `backdrop`



#### [Figma noodles](https://codesandbox.io/s/figma-noodles-iedfg)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fiedfg%2Fscreenshot.png&w=3840&q=75)
Building figma noodles in lamina

`lamina` `gradient` `noise` `depth`



#### [Building live envmaps](https://codesandbox.io/s/building-live-envmaps-lwo219)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Flwo219%2Fscreenshot.png&w=3840&q=75)
Shows how to build declarative environment that are live and animated.

`environment` `lightformer`



#### [Fairly realistic grass](https://codesandbox.io/s/fairly-realistic-grass-y4thxd)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fy4thxd%2Fscreenshot.png&w=3840&q=75)
Made by @CantBeFaraz https://twitter.com/CantBeFaraz/status/1506986428341063681

`clouds` `particles` `surface sampler` `grass` `wind`



#### [Clones](https://codesandbox.io/s/clones-42glz0)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F42glz0%2Fscreenshot.png&w=3840&q=75)
Shows how to form self-contained components with their own state and user interaction.

`gltf` `drei` `clone`



#### [lamina 1.x](https://codesandbox.io/s/lamina-1-x-ledhe1)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fledhe1%2Fscreenshot.png&w=3840&q=75)


`gradient` `lamina` `depth`



#### [Object clump](https://codesandbox.io/s/object-clump-ssbdsw)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fssbdsw%2Fscreenshot.png&w=3840&q=75)
How to make a clump of objects that move towards the center point.

`physics` `cannon-es` `use-cannon`



#### [React-pp outlines](https://codesandbox.io/s/react-pp-outlines-nurp5t)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fnurp5t%2Fscreenshot.png&w=3840&q=75)
How to build declarative, nested outlines where higher-ups take precedence.

`postprocessing` `outlines`



#### [ASCII renderer](https://codesandbox.io/s/ascii-renderer-5jvdu3)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F5jvdu3%2Fscreenshot.png&w=3840&q=75)
Shows how to form self-contained components with their own state and user interaction.





#### [LGL Raytracer](https://codesandbox.io/s/lgl-raytracer-rnuve)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Frnuve%2Fscreenshot.png&w=3840&q=75)
Using the LGL raytracer to obtain photo realistic still images

`raytracer` `lgl` `react-three-lgl`



#### [Gatsby stars](https://codesandbox.io/s/gatsby-stars-2csbr1)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F2csbr1%2Fscreenshot.png&w=3840&q=75)


`stars` `text` `gradient` `instances` `gatsby`



#### [Layer materials](https://codesandbox.io/s/layer-materials-nvup4)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fnvup4%2Fscreenshot.png&w=3840&q=75)
Shows how to form self-contained components with their own state and user interaction.

`layermaterial` `depth` `gradient` `lamina`



#### [Pmndrs + Vercel](https://codesandbox.io/s/pmndrs-vercel-go0b4w)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fgo0b4w%2Fscreenshot.png&w=3840&q=75)


`depth` `gradient` `lamina`



#### [Sport hall](https://codesandbox.io/s/sport-hall-s006f)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fs006f%2Fscreenshot.png&w=3840&q=75)
Shows how to form self-contained components with their own state and user interaction.

`box projected` `environment` `ground mapping` `reflections`



#### [Image Gallery](https://codesandbox.io/s/image-gallery-lx2h8)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Flx2h8%2Fscreenshot.png&w=3840&q=75)
Stage a couple of frames with a reflective, blurred out ground.

`image` `meshreflectormaterial`



#### [Reflector variant](https://codesandbox.io/s/reflector-variant-e6bjz)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fe6bjz%2Fscreenshot.png&w=3840&q=75)
Shows how to stage and center a GLTF model with decent lighting.

`reflections` `postprocessing`



#### [Night train](https://codesandbox.io/s/night-train-l900i)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fl900i%2Fscreenshot.png&w=3840&q=75)
Stacking a couple of drei helpers

`merged` `scroll-controls` `meshreflectormaterial` `instances`



#### [ThreeJS Journey - Level 1](https://codesandbox.io/s/threejs-journey-level-1-kheke)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fkheke%2Fscreenshot.png&w=3840&q=75)
A recreation of the first level from https://threejs-journey.com.

`animations` `composition` `effects` `bruno-simon` `react-spring`



#### [Bouncy watch](https://codesandbox.io/s/bouncy-watch-qyz5r)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fqyz5r%2Fscreenshot.png&w=3840&q=75)
Custom springy controls using use-gesture and react-spring.

`use-gesture` `custom-controls` `react-spring` `tag-heuer`



#### [Horizontal tiles](https://codesandbox.io/s/horizontal-tiles-l4klb)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fl4klb%2Fscreenshot.png&w=3840&q=75)
Horizontal scrollcontrols with expanding tiles.

`expand` `scrollcontrols` `tiles` `horizontal`



#### [Transparent aesop bottles](https://codesandbox.io/s/transparent-aesop-bottles-kv7tv)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fkv7tv%2Fscreenshot.png&w=3840&q=75)
PBR transmission and thickness to emulate glas.

`reflections` `transmission` `glas`



#### [M1 scrollcontrols](https://codesandbox.io/s/m1-scrollcontrols-4m0d0)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F4m0d0%2Fscreenshot.png&w=3840&q=75)
Controlling object animations with scrollcontrols.

`gltf` `scrollcontrols` `animation`



#### [Raycast cycling](https://codesandbox.io/s/raycast-cycling-ls503)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fls503%2Fscreenshot.png&w=3840&q=75)
Bringing multiple objects underneath the cursor up front through raycast cycling

`raycast` `cycling`



#### [Landing page.](https://codesandbox.io/s/landing-page-n60qg)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fn60qg%2Fscreenshot.png&w=3840&q=75)
Transparent backdrop and model staging

`contact shadows`



#### [UseIntersect and scrollcontrols](https://codesandbox.io/s/useintersect-and-scrollcontrols-gsm1y)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fgsm1y%2Fscreenshot.png&w=3840&q=75)
Combining useIntersect with scrollcontrols.

`vertical` `useintersect` `intersection` `scrollcontrols`



#### [Infinite scroll](https://codesandbox.io/s/infinite-scroll-x8gvs)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fx8gvs%2Fscreenshot.png&w=3840&q=75)
Horizontal scrollcontrols that scroll infinitely.

`horizontal` `scrollcontrols` `infinite`



#### [Scrollcontrols with minimap](https://codesandbox.io/s/scrollcontrols-with-minimap-yjhzv)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fyjhzv%2Fscreenshot.png&w=3840&q=75)
Vertical scrollcontrols and minimaps.

`vertical` `minimap`



#### [Scrollcontrols + GLTF](https://codesandbox.io/s/scrollcontrols-gltf-4jr4p)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F4jr4p%2Fscreenshot.png&w=3840&q=75)
Connecting models with useScroll

`gltf` `scrollcontrols`



#### [Merged Instance](https://codesandbox.io/s/merged-instance-kud9p)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fkud9p%2Fscreenshot.png&w=3840&q=75)
Loading massive assemblies and re-using their parts while keeping the natural scene graph alive.

`batching` `merging` `instancing`



#### [GPGPU Curl-noise + DOF](https://codesandbox.io/s/gpgpu-curl-noise-dof-zgsyn)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fzgsyn%2Fscreenshot.png&w=3840&q=75)
Curl noise and depth of field.

`gpu` `shader` `curl` `dof`



#### [Hi-key bubbles](https://codesandbox.io/s/hi-key-bubbles-i6t0j)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fi6t0j%2Fscreenshot.png&w=3840&q=75)
Shows to use drei/instances how far gamma-correction can stretch colors.

`instances`



#### [Floating, instanced shoes.](https://codesandbox.io/s/floating-instanced-shoes-h8o2d)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fh8o2d%2Fscreenshot.png&w=3840&q=75)
Using drei/instances and events.

`instances`



#### [Threejs journey](https://codesandbox.io/s/threejs-journey-ni6v4)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fni6v4%2Fscreenshot.png&w=3840&q=75)
The last scene from Bruno Simons Threejs journey in react-three-fiber

`gltf` `particles` `shaders`



#### [Simple audio analyser](https://codesandbox.io/s/simple-audio-analyser-wu51m)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fwu51m%2Fscreenshot.png&w=3840&q=75)
Audio frequency analysis.

`analyser` `audio`



#### [BestServedBold Christmas Baubles](https://codesandbox.io/s/bestservedbold-christmas-baubles-zxpv7)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fzxpv7%2Fscreenshot.png&w=3840&q=75)
Physics, effects, lights and colors.

`effects` `physics` `baubles`



#### [Mixing HTML and WebGL w/ occlusion](https://codesandbox.io/s/mixing-html-and-webgl-w-occlusion-9keg6)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F9keg6%2Fscreenshot.png&w=3840&q=75)
Having HTML and WebGL in the same scene with the addition of occlusion.

`occlusion` `drei` `html`



#### [Performance scaling](https://codesandbox.io/s/performance-scaling-pz0q6)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fpz0q6%2Fscreenshot.png&w=3840&q=75)
Playing with expensive lighting setups and prost-processing, then making it run fluid with the regress api.

`scaling` `rect-area lights` `performance` `regression` `adaptive`



#### [Staging models](https://codesandbox.io/s/staging-models-9b56t)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F9b56t%2Fscreenshot.png&w=3840&q=75)
Shows how to stage and center a GLTF model with decent lighting.

`drei` `environment` `stage` `gltf`



#### [Camera Scroll](https://codesandbox.io/s/camera-scroll-tu24h)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Ftu24h%2Fscreenshot.png&w=3840&q=75)
Tying scroll to a GLTF camera path with snapping points.

`snap` `scroll` `gtlf` `html`



#### [Shoe configurator](https://codesandbox.io/s/shoe-configurator-qxjoj)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fqxjoj%2Fscreenshot.png&w=3840&q=75)
A super small configurator that shows you how to make GLTF assets dynamic.

`valtio` `state` `gltf` `configurator`



#### [Minimap](https://codesandbox.io/s/minimap-qf8d0)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fqf8d0%2Fscreenshot.png&w=3840&q=75)
Tying shaders and shader-materials to scroll-offset.

`distortion` `scroll` `shaders` `minimap`



#### [Springy boxes](https://codesandbox.io/s/springy-boxes-jz9l97qn89)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fjz9l97qn89%2Fscreenshot.png&w=3840&q=75)
Colorfull boxes changing position with spring physics

`springs` `react-spring` `physics` `animation`



#### [Floating diamonds](https://codesandbox.io/s/floating-diamonds-prb9t)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fprb9t%2Fscreenshot.png&w=3840&q=75)
Mixing refraction shaders and animations.

`gltf` `refraction` `useframe` `useaspect` `drei`



#### [GLTF Animations](https://codesandbox.io/s/gltf-animations-pecl6)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fpecl6%2Fscreenshot.png&w=3840&q=75)
This examples shows how to blend GLTF animation keyframes.

`skinnedmesh` `gltf` `bones` `animations` `useanimations`



#### [Sparks and effects](https://codesandbox.io/s/sparks-and-effects-sbf2i)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fsbf2i%2Fscreenshot.png&w=3840&q=75)
Demonstrating fake-particles, mesh-lines and effect composition.

`glow` `mesh-line` `effects` `particles` `text-geometry`



#### [Audio analyser](https://codesandbox.io/s/audio-analyser-dvokj)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fdvokj%2Fscreenshot.png&w=3840&q=75)
Combining audio analysis with gltf cell fracture and reflections.

`gltf` `audio` `reflections` `cell-fracture`



#### [Ground reflections and video textures](https://codesandbox.io/s/ground-reflections-and-video-textures-bfplr)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fbfplr%2Fscreenshot.png&w=3840&q=75)
This example shows drei's new Reflector in combination with video textures.

`reflections` `gltf` `video` `text`



#### [Circling birds](https://codesandbox.io/s/circling-birds-c671i)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fc671i%2Fscreenshot.png&w=3840&q=75)
Animating a bunch of GLTFs and text-geometry.

`gltf` `text-geometry` `animation`



#### [Adaptive lightmaps](https://codesandbox.io/s/adaptive-lightmaps-wsg13)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fwsg13%2Fscreenshot.png&w=3840&q=75)
Shows how to create live lightmaps, camera-shake and gltf animations.

`camera-shake` `animation` `soft-shadows` `gltf` `lightmap`



#### [Jointwork with ARC4G](https://codesandbox.io/s/jointwork-with-arc4g-32zuv)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F32zuv%2Fscreenshot.png&w=3840&q=75)
Groundreflection, shaders and postprocessing.

`reflections` `arc4g` `shaders` `gltf` `animation`



#### [Camera shake](https://codesandbox.io/s/camera-shake-t4l0f)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Ft4l0f%2Fscreenshot.png&w=3840&q=75)
Testing dre's new CameraShake with a couple of primitives.

`camera-shake` `rectarea-lights` `reflections`



#### [Ragdoll physics](https://codesandbox.io/s/ragdoll-physics-wdzv4)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fwdzv4%2Fscreenshot.png&w=3840&q=75)
A mini game using cannon ragdoll physics. Throw the little guy around.

`game` `ragdoll` `cannon` `physics`



#### [React-spring animations](https://codesandbox.io/s/react-spring-animations-6hi1y)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F6hi1y%2Fscreenshot.png&w=3840&q=75)
This is react-spring animating both the dom as well as the canvas with a single spring.

`react-spring` `gltf` `physics` `spring` `animation`



#### [Aesop bottles](https://codesandbox.io/s/aesop-bottles-9p4j7)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F9p4j7%2Fscreenshot.png&w=3840&q=75)
Small experiment with ground reflections and interaction.

`animation` `aesop` `gltf` `reflections`



#### [Mount transitions](https://codesandbox.io/s/mount-transitions-1sccp)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F1sccp%2Fscreenshot.png&w=3840&q=75)
Shows how to use react-spring mount/unmount transitions, soft-shadows and AO.

`soft-shadows` `animation` `ambient-occlusion` `transitions` `react-spring`



#### [Floating laptop](https://codesandbox.io/s/floating-laptop-q23sw)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fq23sw%2Fscreenshot.png&w=3840&q=75)
Animating GLTFs with react-spring.

`gltf` `animation` `react-spring`



#### [Zustand site](https://codesandbox.io/s/zustand-site-gpioq)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fgpioq%2Fscreenshot.png&w=3840&q=75)
Shows how to parallax layers with dept of field and particles.

`parallax` `animation` `dof` `particles`



#### [Baked AO](https://codesandbox.io/s/baked-ao-f5sgi)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Ff5sgi%2Fscreenshot.png&w=3840&q=75)
Making the contents of a GLTF float and some Blender baking.

`baked` `ambient-occlusion` `floating`



#### [Cell fracture](https://codesandbox.io/s/cell-fracture-3rjsl)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F3rjsl%2Fscreenshot.png&w=3840&q=75)
Exploding GLTFs using Blenders cell-fracture and GLTFJSX.

`animation` `clell-fracture` `gltf` `gltfjsx`



#### [Router transitions](https://codesandbox.io/s/router-transitions-4j2q2)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F4j2q2%2Fscreenshot.png&w=3840&q=75)
Shows how to implement routes and mount/unmount transition within the canvas using Wouter.

`wouter` `router` `trnasitions`



#### [Ballpit](https://codesandbox.io/s/ballpit-mvkqs)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fmvkqs%2Fscreenshot.png&w=3840&q=75)
Physics simulation using cannon.

`cannon` `physics` `collisions` `instancing`



#### [Soft shadows](https://codesandbox.io/s/soft-shadows-dh2jc)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fdh2jc%2Fscreenshot.png&w=3840&q=75)
Percentage closer soft shadows.

`pcss` `soft-shadows` `drei`



#### [Lulaby city](https://codesandbox.io/s/lulaby-city-gkfhr)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fgkfhr%2Fscreenshot.png&w=3840&q=75)
Panning around a city with positional audio.

`positional` `gltf` `audio`



#### [Viking ship](https://codesandbox.io/s/viking-ship-0buje)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F0buje%2Fscreenshot.png&w=3840&q=75)
GLTF workflow with GLTFJSX and camera rotations.

`gltfjsx` `gltf`



#### [Exploding crystal](https://codesandbox.io/s/exploding-crystal-9eeo2)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F9eeo2%2Fscreenshot.png&w=3840&q=75)
Another cell-fracture experiment made in Blender.

`cell-fracture` `explosion` `reflections` `gltf` `blender`



#### [Wobbling sphere](https://codesandbox.io/s/wobbling-sphere-5oufp)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F5oufp%2Fscreenshot.png&w=3840&q=75)
Experimenting with environment maps.

`environment` `reflections` `soft-shadows`



#### [The three graces](https://codesandbox.io/s/the-three-graces-0n9it)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F0n9it%2Fscreenshot.png&w=3840&q=75)
Experimentaing with lights and shadows.

`shadows` `lights` `gltf`



#### [Moksha](https://codesandbox.io/s/moksha-f1ixt)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Ff1ixt%2Fscreenshot.png&w=3840&q=75)
Exploration into scroll containers tied to webgl content made for codrops.

`codrops` `shaders` `refraction` `scroll` `gltf`



#### [Flexbox/Yoga in Webgl](https://codesandbox.io/s/flexboxyoga-in-webgl-7psew)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2F7psew%2Fscreenshot.png&w=3840&q=75)
This example uses yoga to create flex-box layouts.

`layout` `yoga` `scroll` `flexbox` `text`



#### [Confetti](https://codesandbox.io/s/confetti-vl221)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fvl221%2Fscreenshot.png&w=3840&q=75)
Meshline particles.

`particles` `meshline` `confetti`



#### [Learn with Jason](https://codesandbox.io/s/learn-with-jason-oep9o)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Foep9o%2Fscreenshot.png&w=3840&q=75)
Small example made for a Learn-with-Jason episode.

`animation` `gltf`



#### [Volumetric light](https://codesandbox.io/s/volumetric-light-w633u)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fw633u%2Fscreenshot.png&w=3840&q=75)
Experimenting with volumetric lights.

`volumetric` `gltf` `stage` `lights` `godrays`



#### [Hi-key bubbles](https://codesandbox.io/s/hi-key-bubbles-kmb9i)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fkmb9i%2Fscreenshot.png&w=3840&q=75)
Shows how far gamma-correction can stretch colors.

`effects` `instancing` `ambient-occlusion`



#### [Volumetric spotlight](https://codesandbox.io/s/volumetric-spotlight-tx1pq)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Ftx1pq%2Fscreenshot.png&w=3840&q=75)
Volumetric soft particle spot lights.

`volumetric` `spotlight` `soft-particles` `spot`



#### [Magic mirror](https://codesandbox.io/s/magic-mirror-ddk57)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fddk57%2Fscreenshot.png&w=3840&q=75)
Rendering parallel scenes onto textured planes.

`mirror` `fbo`



#### [Reflectorplanes and bloom](https://codesandbox.io/s/reflectorplanes-and-bloom-jflps)

![](https://docs.pmnd.rs/_next/image?url=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fjflps%2Fscreenshot.png&w=3840&q=75)
Playing with reflections, bloom and camera-shake.

`camera-shake` `reflection` `bloom`

